#!/usr/bin/env bash
# run_sarek_all.sh
# Ch·∫°y HaplotypeCaller ‚Üí DeepVariant ‚Üí Mutect2 (tumor-only), m·ªói c√°i ƒë·ªÅu annotate b·∫±ng SnpEff
# Sau khi HO√ÄN T·∫§T c·∫£ 3 l∆∞·ª£t, t·ª± ƒë·ªông d·ªçn work/ ƒë·ªÉ gi·∫£i ph√≥ng dung l∆∞·ª£ng.
set -euo pipefail

# ===== ƒê∆∞·ªùng d·∫´n d·ª± √°n =====
PROJECT_DIR="/home/shmily/BRCA_project"
CFG="$PROJECT_DIR/sarek_local.config"
PARAMS="$PROJECT_DIR/sarek_local_params.yaml"
SNPEFF_CACHE="$PROJECT_DIR/snpeff_cache/data"
INTERVALS="$PROJECT_DIR/reference/TruSight_Cancer_TargetedRegions_v1.0.hg38.bed"

# Samplesheets
GERM_SHEET="$PROJECT_DIR/samplesheet_germline.csv"

# Th∆∞ m·ª•c d·ªØ li·ªáu tr√™n ph√¢n v√πng ext4 m·ªõi
OUT_BASE="/mnt/sarek_storage/sarek_results"
WORK_DIR="/mnt/sarek_storage/work"

# ===== Helper =====
ts() { date +"%Y%m%d_%H%M%S"; }
die() { echo "‚ùå $*" >&2; exit 1; }

# ===== Ki·ªÉm tra ƒë·∫ßu v√†o =====
for p in "$CFG" "$PARAMS" "$INTERVALS" "$SNPEFF_CACHE"; do
  [[ -e "$p" ]] || die "Thi·∫øu resource: $p"
done
[[ -s "$GERM_SHEET" ]] || die "CSV thi·∫øu ho·∫∑c r·ªóng: $GERM_SHEET"
# SOMA c√≥ th·ªÉ r·ªóng (n·∫øu b·∫°n ch∆∞a c√≥ somatic), v·∫´n ti·∫øp t·ª•c ch·∫°y germline.

mkdir -p "$OUT_BASE" "$WORK_DIR"

echo "===> 1/3 HaplotypeCaller + SnpEff (germline)"
nextflow run nf-core/sarek -r 3.5.1 -profile docker \
  -c "$CFG" -params-file "$PARAMS" \
  --input "$GERM_SHEET" \
  --intervals "$INTERVALS" \
  --snpeff_cache "$SNPEFF_CACHE" \
  --tools haplotypecaller,snpeff \
  --germline_filtering_tool hard \
  --outdir "$OUT_BASE/haplotypecaller_$(ts)" \
  -work-dir "$WORK_DIR" \
  -resume
echo "‚úÖ Xong! k·∫øt qu·∫£ ·ªü: $OUT_BASE"



#!/usr/bin/env bash
# run_sarek_all.sh
# Ch·∫°y HaplotypeCaller ‚Üí DeepVariant ‚Üí Mutect2 (tumor-only), m·ªói c√°i ƒë·ªÅu annotate b·∫±ng SnpEff
# Sau khi HO√ÄN T·∫§T c·∫£ 3 l∆∞·ª£t, t·ª± ƒë·ªông d·ªçn work/ ƒë·ªÉ gi·∫£i ph√≥ng dung l∆∞·ª£ng.
set -euo pipefail

# ===== ƒê∆∞·ªùng d·∫´n d·ª± √°n =====
PROJECT_DIR="/home/shmily/BRCA_project"
CFG="$PROJECT_DIR/sarek_local.config"
PARAMS="$PROJECT_DIR/sarek_local_params.yaml"
SNPEFF_CACHE="$PROJECT_DIR/snpeff_cache/data"
INTERVALS="$PROJECT_DIR/reference/TruSight_Cancer_TargetedRegions_v1.0.hg38.bed"

# Samplesheets
GERM_SHEET="$PROJECT_DIR/samplesheet_germline.csv"

# Th∆∞ m·ª•c d·ªØ li·ªáu tr√™n ph√¢n v√πng ext4 m·ªõi
OUT_BASE="/mnt/sarek_storage/sarek_results"
WORK_DIR="/mnt/sarek_storage/work"

# ===== Helper =====
ts() { date +"%Y%m%d_%H%M%S"; }
die() { echo "‚ùå $*" >&2; exit 1; }

# ===== Ki·ªÉm tra ƒë·∫ßu v√†o =====
for p in "$CFG" "$PARAMS" "$INTERVALS" "$SNPEFF_CACHE"; do
  [[ -e "$p" ]] || die "Thi·∫øu resource: $p"
done
[[ -s "$GERM_SHEET" ]] || die "CSV thi·∫øu ho·∫∑c r·ªóng: $GERM_SHEET"
# SOMA c√≥ th·ªÉ r·ªóng (n·∫øu b·∫°n ch∆∞a c√≥ somatic), v·∫´n ti·∫øp t·ª•c ch·∫°y germline.

mkdir -p "$OUT_BASE" "$WORK_DIR"

echo "===> 2/3 DeepVariant + SnpEff (germline)"
nextflow run nf-core/sarek -r 3.5.1 -profile docker \
  -c "$CFG" -params-file "$PARAMS" \
  --input "$GERM_SHEET" \
  --intervals "$INTERVALS" \
  --snpeff_cache "$SNPEFF_CACHE" \
  --tools deepvariant,snpeff \
  --outdir "$OUT_BASE/deepvariant_$(ts)" \
  -work-dir "$WORK_DIR" \
  -resume




#!/usr/bin/env bash
set -euo pipefail

PROJECT_DIR="/home/shmily/BRCA_project"
CFG="$PROJECT_DIR/sarek_local.config"
PARAMS="$PROJECT_DIR/sarek_local_params.yaml"
SNPEFF_CACHE="$PROJECT_DIR/snpeff_cache/data"
INTERVALS="$PROJECT_DIR/reference/TruSight_Cancer_TargetedRegions_v1.0.hg38.bed"
SOMA_SHEET="$PROJECT_DIR/samplesheet_somatic.csv"

OUT_BASE="/mnt/sarek_storage/sarek_results"
WORK_DIR="/mnt/sarek_storage/work"

ts() { date +"%Y%m%d_%H%M%S"; }
die() { echo "‚ùå $*" >&2; exit 1; }

for p in "$CFG" "$PARAMS" "$INTERVALS" "$SNPEFF_CACHE"; do
  [[ -e "$p" ]] || die "Thi·∫øu resource: $p"
done
[[ -s "$SOMA_SHEET" ]] || die "CSV somatic thi·∫øu ho·∫∑c r·ªóng: $SOMA_SHEET"

mkdir -p "$OUT_BASE" "$WORK_DIR"

if [[ "$(wc -l < "$SOMA_SHEET")" -ge 2 ]]; then
  echo "===> 3/3 Mutect2 (tumor-only) + SnpEff (somatic)"
  nextflow run nf-core/sarek -r 3.5.1 -profile docker \
    -c "$CFG" -params-file "$PARAMS" \
    --input "$SOMA_SHEET" \
    --intervals "$INTERVALS" \
    --snpeff_cache "$SNPEFF_CACHE" \
    --tools mutect2,snpeff \
    --outdir "$OUT_BASE/mutect2_$(ts)" \
    -work-dir "$WORK_DIR" \
    -resume
else
  echo "‚è© B·ªè qua Mutect2: $SOMA_SHEET kh√¥ng c√≥ m·∫´u (ch·ªâ header ho·∫∑c tr·ªëng)."
fi

echo "üßπ D·ªçn work/ sau khi ho√†n t·∫•t..."
nextflow clean -f || true




